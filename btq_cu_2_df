##Install ClickRUp package
  options(repos = c(
   psolymos = "https://psolymos.r-universe.dev",
   CRAN = "https://cloud.r-project.org"))
 install.packages('clickrup')
 install.packages("tidyverse")
 install.packages("skimr")
 ls("package:clickrup")
##Add ClickUp token as an envr variable
#file.edit("~/.Renviron")
Sys.setenv(CU_PAT = "pk_7800300_QI7UOCL61N2GF7GW5W3O097RO46VJFST")
Sys.getenv("CU_PAT")

library(tidyverse)
library(skimr)
library(clickrup)
library(httr)
library(jsonlite)

cu_get_pat()
Teams <- cu_get_teams()
team_id <- Teams$teams[[1]]$id
Spaces <- cu_get_spaces(team_id)
bqt_space_id <- Spaces$spaces[[7]]$id
BQTFolderlessList <- cu_get_lists_folderless(bqt_space_id)
QTRTlist_id <- BQTFolderlessList$lists[[1]]$id
BQTTaskspg1 <- cu_get_tasks(QTRTlist_id,include_closed=TRUE, page=1)

bqttask1df <- as.data.frame(fromJSON(toJSON(BQTTaskspg1$tasks,auto_unbox = TRUE)))
bqttask1df_subset <- bqttask1df[c("name", "date_closed","assignees", "custom_fields")]
bqttask1df_subset$date_closed <- cu_date_from(bqttask1df_subset$date_closed)
bqttask1df_subset$assignees <- as.character(sapply(bqttask1df_subset$assignees, function(x) x[2]))
bqttask1df_subset$assignees <- sapply(bqttask1df_subset$assignees, function(x)  {
  if (grepl("^c\\(.*\\)$", x)) {
    # If the string starts with "c(" and ends with ")", remove them
    x <- substr(x, 3, nchar(x) - 1)
  }
    # Split the string and extract the first element
  split_names <- unlist(strsplit(x, ", "))
  first_name <- gsub("[[:punct:]]", "", split_names[1])
  first_name <- gsub("\\\\", "", first_name)  # Remove backslashes
  first_name
})
bqttask1df_subset$Typos <- ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) {
  return(y[3,"value"])
  }
)))==0, "Yes", "No")
bqttask1df_subset$Incorporated <- ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) { # Yes = 0, No = 1, N/A = 2
  return(y[4,"value"])
}
)))==0, "Yes", 
  ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) { # Yes = 0, No = 1, N/A = 2
    return(y[4,"value"])
  }
  )))==1, "No",
    ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) { # Yes = 0, No = 1, N/A = 2
      return(y[4,"value"])
    }
    )))==2, "N/A", NA)))
bqttask1df_subset$Qscore <- as.character((sapply(bqttask1df_subset$custom_fields, function(y) {
  return(y[5,"value"])
}
)))
bqttask1df_subset$Qscore <- as.integer(bqttask1df_subset$Qscore) + 1
bqttask1df_subset$completeness <- ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) { # Yes = 0, No = 1, N/A = 2
  return(y[6,"value"])
}
)))==0, "Yes", 
ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) { # Yes = 0, No = 1, N/A = 2
  return(y[6,"value"])
}
)))==1, "No",
ifelse((as.character(sapply(bqttask1df_subset$custom_fields, function(y) { # Yes = 0, No = 1, N/A = 2
  return(y[6,"value"])
}
)))==2, "N/A", NA)))

view(bqttask1df_subset)
skim_without_charts(bqttask1df_subset)
view(bqttask1df_subset$custom_fields)
